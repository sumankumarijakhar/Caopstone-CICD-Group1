name: Deploy (Python)

on:
  push:
    branches: [ "main" ]
  workflow_dispatch: {}

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: ${{ secrets.AWS_REGION || 'us-east-1' }}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with: { python-version: '3.12' }

      - name: Install CDK & deps
        run: |
          pip install -r requirements.txt || true
          pip install aws-cdk-lib constructs boto3
          npm i -g aws-cdk

      - name: Configure AWS credentials (sandbox)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token:     ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region:            ${{ env.AWS_REGION }}

      - name: CDK Bootstrap (idempotent)
        run: cdk bootstrap

      - name: Deploy stack
        run: cdk deploy --require-approval never

      - name: Capture outputs
        id: outs
        run: |
          SITE=$(aws cloudformation describe-stacks --stack-name CapstoneStack \
            --query "Stacks[0].Outputs[?OutputKey=='SiteUrl'].OutputValue" --output text)
          BUCKET=$(aws cloudformation describe-stacks --stack-name CapstoneStack \
            --query "Stacks[0].Outputs[?OutputKey=='SiteBucketName'].OutputValue" --output text)
          DIST=$(aws cloudformation describe-stacks --stack-name CapstoneStack \
            --query "Stacks[0].Outputs[?OutputKey=='DistributionId'].OutputValue" --output text)
          echo "SITE=$SITE" >> $GITHUB_ENV
          echo "BUCKET=$BUCKET" >> $GITHUB_ENV
          echo "DIST=$DIST" >> $GITHUB_ENV
          echo "Site=$SITE"
          echo "Bucket=$BUCKET, Dist=$DIST"

      - name: Upload frontend
        run: aws s3 sync frontend/ s3://$BUCKET --delete

      - name: Invalidate CloudFront
        run: aws cloudfront create-invalidation --distribution-id $DIST --paths "/*"
